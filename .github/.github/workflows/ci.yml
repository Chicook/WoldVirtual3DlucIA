name: 🚀 CI Multi-Módulo - Metaverso Web3

on:
  push:
    branches: [main, develop, staging]
  pull_request:
    branches: [main, develop]
  schedule:
    - cron: '0 2 * * *'  # Auditoría diaria a las 2 AM

env:
  NODE_VERSION: '18'
  RUST_VERSION: '1.75'
  SOLIDITY_VERSION: '0.8.24'

jobs:
  # 🔍 VALIDACIÓN DE CÓDIGO
  code-validation:
    name: 🔍 Validación de Código
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 🦀 Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          
      - name: 📦 Install Dependencies
        run: |
          npm ci
          cd .bin && npm ci
          
      - name: 🔍 Linting
        run: |
          echo "🔍 Ejecutando linting..."
          npm run lint:all || echo "Linting no configurado"
          
      - name: 📝 Type Checking
        run: |
          echo "📝 Verificando tipos..."
          npm run type-check:all || echo "Type checking no configurado"
          
      - name: 🎨 Format Check
        run: |
          echo "🎨 Verificando formato..."
          npm run format:check || echo "Format check no configurado"

  # ⛓️ SMART CONTRACTS
  smart-contracts:
    name: ⛓️ Smart Contracts
    runs-on: ubuntu-latest
    needs: code-validation
    timeout-minutes: 20
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📦 Install Foundry
        run: |
          curl -L https://foundry.paradigm.xyz | bash
          source ~/.bashrc
          foundryup
          
      - name: 🏗️ Compile Contracts
        run: |
          echo "🏗️ Compilando smart contracts..."
          cd protocol
          forge build
          
      - name: 🧪 Test Contracts
        run: |
          echo "🧪 Probando smart contracts..."
          cd protocol
          forge test
          
      - name: 🛡️ Security Audit
        run: |
          echo "🛡️ Auditoría de seguridad..."
          cd protocol
          forge test --fuzz-runs 1000
          
      - name: 📊 Gas Report
        run: |
          echo "📊 Generando reporte de gas..."
          cd protocol
          forge test --gas-report

  # 🎮 3D ASSETS
  three-d-assets:
    name: 🎮 Assets 3D
    runs-on: ubuntu-latest
    needs: code-validation
    timeout-minutes: 30
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📦 Install Dependencies
        run: |
          npm ci
          npm install -g gltf-pipeline sharp
          
      - name: 🎨 Validate 3D Assets
        run: |
          echo "🎨 Validando assets 3D..."
          node .bin/builder/optimize-assets.js --validate-only
          
      - name: 📦 Process Assets
        run: |
          echo "📦 Procesando assets..."
          node .bin/builder/optimize-assets.js --process
          
      - name: 📊 Asset Report
        run: |
          echo "📊 Generando reporte de assets..."
          node .bin/metaverso/process-assets.js --report

  # 🧪 TESTING INTEGRADO
  integration-tests:
    name: 🧪 Tests de Integración
    runs-on: ubuntu-latest
    needs: [smart-contracts, three-d-assets]
    timeout-minutes: 25
    
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        
      - name: 🔧 Setup Environment
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📦 Install Dependencies
        run: |
          npm ci
          cd client && npm ci
          cd ../gateway && npm ci
          cd ../protocol && npm ci
          
      - name: 🏗️ Build All Modules
        run: |
          echo "🏗️ Compilando todos los módulos..."
          npm run build:all
          
      - name: 🧪 Run Integration Tests
        run: |
          echo "🧪 Ejecutando tests de integración..."
          npm run test:integration
          
      - name: 📊 Coverage Report
        run: |
          echo "📊 Generando reporte de cobertura..."
          npm run coverage:all
          
      - name: 📤 Upload Coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/

  # 🔒 SEGURIDAD
  security-scan:
    name: 🔒 Escaneo de Seguridad
    runs-on: ubuntu-latest
    needs: code-validation
    timeout-minutes: 20
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📦 Install Dependencies
        run: |
          npm ci
          npm install -g snyk
          
      - name: 🔍 Dependency Scan
        run: |
          echo "🔍 Escaneando dependencias..."
          npm audit --audit-level=moderate
          snyk test --severity-threshold=high
          
      - name: 🛡️ CodeQL Analysis
        uses: github/codeql-action/init@v3
        with:
          languages: javascript, typescript
          
      - name: 🔍 Autobuild
        uses: github/codeql-action/autobuild@v3
        
      - name: 📊 CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        
      - name: 📤 Upload Security Report
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: |
            snyk-report.json
            codeql-report.json

  # 📊 PERFORMANCE
  performance-test:
    name: 📊 Test de Rendimiento
    runs-on: ubuntu-latest
    needs: integration-tests
    timeout-minutes: 15
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📦 Install Dependencies
        run: |
          npm ci
          npm install -g artillery
          
      - name: 🚀 Start Test Server
        run: |
          echo "🚀 Iniciando servidor de prueba..."
          npm run start:test &
          sleep 30
          
      - name: 📊 Load Test
        run: |
          echo "📊 Ejecutando test de carga..."
          artillery run .bin/monitor/load-test.yml
          
      - name: 📈 Performance Report
        run: |
          echo "📈 Generando reporte de rendimiento..."
          node .bin/monitor/performance-check.js --ci

  # 🎯 NOTIFICACIONES
  notifications:
    name: 📢 Notificaciones
    runs-on: ubuntu-latest
    needs: [integration-tests, security-scan, performance-test]
    if: always()
    
    steps:
      # (Pasos de Slack y Email eliminados para evitar errores de secrets no definidos)