name: 📊 Monitoreo Continuo - Metaverso Web3

on:
  schedule:
    - cron: '*/5 * * * *'  # Cada 5 minutos
  workflow_dispatch:
    inputs:
      check_type:
        description: 'Tipo de verificación'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - performance
        - blockchain
        - assets
        - security

env:
  NODE_VERSION: '18'
  CHECK_INTERVAL: '300'  # 5 minutos
  VERCEL_URL: ${{ secrets.VERCEL_URL || '' }}
  NETLIFY_URL: ${{ secrets.NETLIFY_URL || '' }}
  CLOUDFLARE_URL: ${{ secrets.CLOUDFLARE_URL || '' }}
  IPFS_GATEWAY: ${{ secrets.IPFS_GATEWAY || '' }}
  ARWEAVE_GATEWAY: ${{ secrets.ARWEAVE_GATEWAY || '' }}

jobs:
  # 🔍 HEALTH CHECK
  health-check:
    name: 🔍 Health Check General
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        
      - name: 🔧 Setup Environment
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📦 Install Monitoring Tools
        run: |
          npm install -g lighthouse
          npm install -g webpagetest
          
      - name: 🔍 Check Vercel Health
        run: |
          echo "🔍 Verificando Vercel..."
          curl -f ${{ env.VERCEL_URL }}/health || echo "❌ Vercel down"
          
      - name: 🔍 Check Netlify Health
        run: |
          echo "🔍 Verificando Netlify..."
          curl -f ${{ env.NETLIFY_URL }}/health || echo "❌ Netlify down"
          
      - name: 🔍 Check Cloudflare Health
        run: |
          echo "🔍 Verificando Cloudflare..."
          curl -f ${{ env.CLOUDFLARE_URL }}/health || echo "❌ Cloudflare down"
          
      - name: 🔍 Check IPFS Gateway
        run: |
          echo "🔍 Verificando IPFS..."
          curl -f ${{ env.IPFS_GATEWAY }}/health || echo "❌ IPFS down"
          
      - name: 🔍 Check Arweave Gateway
        run: |
          echo "🔍 Verificando Arweave..."
          curl -f ${{ env.ARWEAVE_GATEWAY }}/health || echo "❌ Arweave down"

  # 📊 PERFORMANCE MONITORING
  performance-monitoring:
    name: 📊 Monitoreo de Rendimiento
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        
      - name: 🔧 Setup Environment
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📦 Install Performance Tools
        run: |
          npm install -g lighthouse
          npm install -g webpagetest
          
      - name: 📊 Lighthouse Audit
        run: |
          echo "📊 Ejecutando Lighthouse audit..."
          lighthouse ${{ env.VERCEL_URL }} --output=json --output-path=./lighthouse-report.json
          
      - name: 📊 WebPageTest
        run: |
          echo "📊 Ejecutando WebPageTest..."
          webpagetest test ${{ env.VERCEL_URL }} --key=${{ secrets.WEBPAGETEST_KEY }}
          
      - name: 📊 Performance Analysis
        run: |
          echo "📊 Analizando rendimiento..."
          node .bin/monitor/analyze-performance.js --report=lighthouse-report.json
          
      - name: 📤 Upload Performance Report
        uses: actions/upload-artifact@v4
        with:
          name: performance-report
          path: |
            lighthouse-report.json
            performance-analysis.json

  # ⛓️ BLOCKCHAIN MONITORING
  blockchain-monitoring:
    name: ⛓️ Monitoreo Blockchain
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        
      - name: 🔧 Setup Environment
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📦 Install Blockchain Tools
        run: |
          npm install -g ethers
          npm install -g web3
          
      - name: 🔍 Check Ethereum Network
        run: |
          echo "🔍 Verificando red Ethereum..."
          node .bin/blockchain/check-network.js --network=ethereum
          
      - name: 🔍 Check Polygon Network
        run: |
          echo "🔍 Verificando red Polygon..."
          node .bin/blockchain/check-network.js --network=polygon
          
      - name: 🔍 Check Smart Contracts
        run: |
          echo "🔍 Verificando smart contracts..."
          node .bin/blockchain/check-contracts.js
          
      - name: 📊 Gas Price Monitoring
        run: |
          echo "📊 Monitoreando precios de gas..."
          node .bin/blockchain/monitor-gas.js
          
      - name: 📊 Transaction Monitoring
        run: |
          echo "📊 Monitoreando transacciones..."
          node .bin/blockchain/monitor-transactions.js
          
      - name: 📤 Upload Blockchain Report
        uses: actions/upload-artifact@v4
        with:
          name: blockchain-report
          path: |
            blockchain-health.json
            gas-report.json
            transaction-report.json

  # 🎮 METAVERSE MONITORING
  metaverse-monitoring:
    name: 🎮 Monitoreo del Metaverso
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        
      - name: 🔧 Setup Environment
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 🔍 Check 3D Assets
        run: |
          echo "🔍 Verificando assets 3D..."
          node .bin/metaverso/check-assets.js
          
      - name: 🔍 Check World Loading
        run: |
          echo "🔍 Verificando carga de mundos..."
          node .bin/metaverso/check-worlds.js
          
      - name: 🔍 Check User Sessions
        run: |
          echo "🔍 Verificando sesiones de usuario..."
          node .bin/metaverso/check-sessions.js
          
      - name: 📊 Performance Metrics
        run: |
          echo "📊 Métricas de rendimiento..."
          node .bin/metaverso/performance-metrics.js
          
      - name: 📤 Upload Metaverse Report
        uses: actions/upload-artifact@v4
        with:
          name: metaverse-report
          path: |
            assets-health.json
            worlds-health.json
            sessions-report.json
            performance-metrics.json

  # 🔒 SECURITY MONITORING
  security-monitoring:
    name: 🔒 Monitoreo de Seguridad
    runs-on: ubuntu-latest
    timeout-minutes: 25
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        
      - name: 🔧 Setup Environment
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📦 Install Security Tools
        run: |
          npm install -g snyk
          npm install -g auditjs
          
      - name: 🔍 Dependency Security Check
        run: |
          echo "🔍 Verificando seguridad de dependencias..."
          npm audit --audit-level=moderate
          snyk test --severity-threshold=high
          
      - name: 🔍 Smart Contract Security
        run: |
          echo "🔍 Verificando seguridad de smart contracts..."
          node .bin/security/check-contracts.js
          
      - name: 🔍 Asset Security Check
        run: |
          echo "🔍 Verificando seguridad de assets..."
          node .bin/security/check-assets.js
          
      - name: 📊 Security Report
        run: |
          echo "📊 Generando reporte de seguridad..."
          node .bin/security/generate-report.js
          
      - name: 📤 Upload Security Report
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: |
            security-audit.json
            vulnerability-report.json

  # 📈 ANALYTICS
  analytics:
    name: 📈 Analytics y Métricas
    runs-on: ubuntu-latest
    needs: [health-check, performance-monitoring, blockchain-monitoring, metaverse-monitoring, security-monitoring]
    timeout-minutes: 10
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        
      - name: 📦 Download All Reports
        uses: actions/download-artifact@v4
        with:
          name: performance-report
          path: ./reports/performance
        continue-on-error: true
          
      - name: 📦 Download Blockchain Reports
        uses: actions/download-artifact@v4
        with:
          name: blockchain-report
          path: ./reports/blockchain
        continue-on-error: true
          
      - name: 📦 Download Metaverse Reports
        uses: actions/download-artifact@v4
        with:
          name: metaverse-report
          path: ./reports/metaverse
        continue-on-error: true
          
      - name: 📦 Download Security Reports
        uses: actions/download-artifact@v4
        with:
          name: security-report
          path: ./reports/security
        continue-on-error: true
          
      - name: 📊 Generate Analytics Report
        run: |
          echo "📊 Generando reporte de analytics..."
          node .bin/monitor/generate-analytics.js
          
      - name: 📤 Upload Analytics Report
        uses: actions/upload-artifact@v4
        with:
          name: analytics-report
          path: ./reports/analytics.json

  # 🚨 ALERTS
  alerts:
    name: 🚨 Sistema de Alertas
    runs-on: ubuntu-latest
    needs: analytics
    if: always()
    timeout-minutes: 5
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        
      - name: 📦 Download Analytics Report
        uses: actions/download-artifact@v4
        with:
          name: analytics-report
          path: ./
        continue-on-error: true
          
      - name: 🚨 Check Critical Alerts
        run: |
          echo "🚨 Verificando alertas críticas..."
          node .bin/monitor/check-alerts.js
          
      - name: 📢 Send Slack Alerts
        run: |
          echo "📢 Enviando alertas a Slack..."
          node .bin/toolkit/send-alerts.js --platform=slack
          
      - name: 📧 Send Email Alerts
        run: |
          echo "📧 Enviando alertas por email..."
          node .bin/toolkit/send-alerts.js --platform=email
          
      - name: 📱 Send Discord Alerts
        run: |
          echo "📱 Enviando alertas a Discord..."
          node .bin/toolkit/send-alerts.js --platform=discord

  # 📊 DASHBOARD UPDATE
  dashboard-update:
    name: 📊 Actualizar Dashboard
    runs-on: ubuntu-latest
    needs: analytics
    timeout-minutes: 10
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4
        
      - name: 📦 Download Analytics Report
        uses: actions/download-artifact@v4
        with:
          name: analytics-report
          path: ./
        continue-on-error: true
          
      - name: 📊 Update Dashboard
        run: |
          echo "📊 Actualizando dashboard..."
          node .bin/monitor/update-dashboard.js
          
      - name: 📊 Update Metrics
        run: |
          echo "📊 Actualizando métricas..."
          node .bin/monitor/update-metrics.js
          
      - name: 📊 Generate Status Page
        run: |
          echo "📊 Generando página de estado..."
          node .bin/monitor/generate-status-page.js 