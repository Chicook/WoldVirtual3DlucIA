name: Performance Monitoring Metaverso
description: Monitoreo continuo de rendimiento y optimizaci√≥n del metaverso
triggers: ['schedule', 'manual', 'performance-alert']

jobs:
  system-metrics:
    name: M√©tricas del Sistema
    runs_on: ubuntu-latest
    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Instalar dependencias
        run: npm ci
        
      - name: Monitoreo de CPU y memoria
        run: |
          node ../monitor/performance-check.js --cpu
          node ../monitor/performance-check.js --memory
          node ../monitor/performance-check.js --disk
          
      - name: An√°lisis de procesos
        run: |
          ps aux --sort=-%cpu | head -10 > top-processes.txt
          ps aux --sort=-%mem | head -10 >> top-processes.txt
          
      - name: Verificar uso de red
        run: |
          netstat -i > network-stats.txt
          ifconfig > network-interfaces.txt

  application-performance:
    name: Rendimiento de la Aplicaci√≥n
    runs_on: ubuntu-latest
    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Instalar dependencias
        run: npm ci
        
      - name: Tests de rendimiento
        run: |
          npm run test:performance
          npm run benchmark
          
      - name: An√°lisis de bundle
        run: |
          npm run build:analyze
          npx webpack-bundle-analyzer dist/stats.json
          
      - name: Lighthouse audit
        run: |
          npx lighthouse http://localhost --output=json --output-path=lighthouse-report.json
          npx lighthouse http://localhost --output=html --output-path=lighthouse-report.html

  database-performance:
    name: Rendimiento de Base de Datos
    runs_on: ubuntu-latest
    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Instalar dependencias
        run: npm ci
        
      - name: An√°lisis de consultas lentas
        run: |
          node ../monitor/performance-check.js --database
          node ../monitor/performance-check.js --queries
          
      - name: Verificar √≠ndices
        run: |
          node ../monitor/performance-check.js --indexes
          node ../monitor/performance-check.js --optimization

  blockchain-performance:
    name: Rendimiento Blockchain
    runs_on: ubuntu-latest
    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Instalar dependencias
        run: npm ci
        
      - name: Monitoreo de transacciones
        run: |
          node ../blockchain/deploy-contracts.js --performance
          node ../monitor/performance-check.js --blockchain
          
      - name: An√°lisis de gas
        run: |
          node ../blockchain/mint-nft.js --gas-analysis
          npx hardhat test --grep "gas"

  load-testing:
    name: Pruebas de Carga
    runs_on: ubuntu-latest
    if: github.event_name == 'manual'
    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Instalar dependencias
        run: npm ci
        
      - name: Instalar herramientas de testing
        run: |
          npm install -g artillery k6
          
      - name: Pruebas con Artillery
        run: |
          artillery run load-tests/scenarios.yml
          artillery run load-tests/stress.yml
          
      - name: Pruebas con k6
        run: |
          k6 run load-tests/performance.js
          k6 run load-tests/stress.js

  optimization-analysis:
    name: An√°lisis de Optimizaci√≥n
    runs_on: ubuntu-latest
    needs: [system-metrics, application-performance, database-performance, blockchain-performance]
    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Instalar dependencias
        run: npm ci
        
      - name: An√°lisis de optimizaciones
        run: |
          node ../builder/optimize-assets.js --analyze
          node ../monitor/performance-check.js --optimization-report
          
      - name: Generar recomendaciones
        run: |
          node ../monitor/performance-check.js --recommendations
          node ../builder/optimize-assets.js --suggestions

  alerting:
    name: Sistema de Alertas
    runs_on: ubuntu-latest
    needs: [system-metrics, application-performance, database-performance, blockchain-performance]
    if: always()
    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v3
        
      - name: Verificar umbrales
        run: |
          node ../monitor/performance-check.js --check-thresholds
          node ../monitor/health-check.sh --performance
          
      - name: Generar alertas
        run: |
          if [ -f "performance-alerts.txt" ]; then
            echo "üö® Alertas de rendimiento detectadas:"
            cat performance-alerts.txt
          else
            echo "‚úÖ Rendimiento dentro de par√°metros normales"
          fi

  report-generation:
    name: Generaci√≥n de Reporte
    runs_on: ubuntu-latest
    needs: [optimization-analysis, alerting]
    if: always()
    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v3
        
      - name: Descargar artifacts
        uses: actions/download-artifact@v3
        with:
          path: performance-reports/
          
      - name: Generar reporte consolidado
        run: |
          node ../monitor/performance-check.js --generate-report
          node ../builder/optimize-assets.js --report
          
      - name: Crear dashboard de rendimiento
        run: |
          echo "# Reporte de Rendimiento - $(date)" > performance-report.md
          echo "## M√©tricas del Sistema" >> performance-report.md
          echo "## Rendimiento de la Aplicaci√≥n" >> performance-report.md
          echo "## Optimizaciones Recomendadas" >> performance-report.md
          
      - name: Subir reporte
        uses: actions/upload-artifact@v3
        with:
          name: performance-report
          path: |
            performance-report.md
            performance-reports/
            lighthouse-report.html

  auto-optimization:
    name: Optimizaci√≥n Autom√°tica
    runs_on: ubuntu-latest
    needs: report-generation
    if: success()
    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Instalar dependencias
        run: npm ci
        
      - name: Aplicar optimizaciones autom√°ticas
        run: |
          node ../builder/optimize-assets.js --auto-optimize
          node ../monitor/performance-check.js --apply-optimizations
          
      - name: Verificar mejoras
        run: |
          node ../monitor/performance-check.js --verify-improvements
          npm run test:performance -- --compare

  notification:
    name: Notificaciones
    runs_on: ubuntu-latest
    needs: [report-generation, auto-optimization]
    if: always()
    steps:
      - name: Notificar resultados
        run: |
          if [ ${{ needs.report-generation.result }} == 'success' ]; then
            echo "‚úÖ Monitoreo de rendimiento completado"
            # Notificar a Slack/Discord con m√©tricas
          else
            echo "‚ùå Error en monitoreo de rendimiento"
            # Notificar alerta
          fi
          
      - name: Enviar alertas cr√≠ticas
        if: failure()
        run: |
          echo "üö® ALERTA: Problemas cr√≠ticos de rendimiento detectados"
          # Enviar notificaci√≥n urgente 