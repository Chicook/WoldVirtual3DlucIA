{
  "name": "metaverso-crypto-world-virtual-3d",
  "version": "1.0.0",
  "description": "Plataforma completa del Metaverso Crypto World Virtual 3D - Sistema descentralizado con blockchain, DeFi, NFTs, gobernanza y realidad virtual",
  "main": "web/index.html",
  "scripts": {
    "start": "npm run dev",
    "dev": "concurrently \"npm run dev:web\" \"npm run dev:backend\" \"npm run dev:blockchain\"",
    "dev:web": "cd web && npm run dev",
    "dev:backend": "cd backend && npm run dev",
    "dev:blockchain": "cd bloc && npm run dev",
    "build": "npm run build:all",
    "build:all": "npm run build:web && npm run build:backend && npm run build:blockchain && npm run build:assets",
    "build:web": "cd web && npm run build",
    "build:backend": "cd backend && npm run build",
    "build:blockchain": "cd bloc && npm run build",
    "build:assets": "cd assets && npm run build",
    "test": "npm run test:all",
    "test:all": "npm run test:unit && npm run test:integration && npm run test:system",
    "test:unit": "jest --config test/jest.config.js --testPathPattern=unit",
    "test:integration": "jest --config test/jest.config.js --testPathPattern=integration",
    "test:system": "node test/run-tests.js",
    "test:watch": "jest --config test/jest.config.js --watch",
    "test:coverage": "jest --config test/jest.config.js --coverage",
    "lint": "npm run lint:all",
    "lint:all": "npm run lint:web && npm run lint:backend && npm run lint:blockchain",
    "lint:web": "cd web && npm run lint",
    "lint:backend": "cd backend && npm run lint",
    "lint:blockchain": "cd bloc && npm run lint",
    "lint:fix": "npm run lint:fix:all",
    "lint:fix:all": "npm run lint:fix:web && npm run lint:fix:backend && npm run lint:fix:blockchain",
    "lint:fix:web": "cd web && npm run lint:fix",
    "lint:fix:backend": "cd backend && npm run lint:fix",
    "lint:fix:blockchain": "cd bloc && npm run lint:fix",
    "clean": "npm run clean:all",
    "clean:all": "rimraf dist node_modules && npm run clean:modules",
    "clean:modules": "npm run clean:web && npm run clean:backend && npm run clean:blockchain && npm run clean:assets",
    "clean:web": "cd web && npm run clean",
    "clean:backend": "cd backend && npm run clean",
    "clean:blockchain": "cd bloc && npm run clean",
    "clean:assets": "cd assets && npm run clean",
    "install:all": "npm install && npm run install:modules",
    "install:modules": "npm run install:web && npm run install:backend && npm run install:blockchain && npm run install:assets",
    "install:web": "cd web && npm install",
    "install:backend": "cd backend && npm install",
    "install:blockchain": "cd bloc && npm install",
    "install:assets": "cd assets && npm install",
    "deploy": "npm run deploy:all",
    "deploy:all": "npm run build && npm run deploy:contracts && npm run deploy:web",
    "deploy:contracts": "cd bloc && npm run deploy",
    "deploy:web": "cd web && npm run deploy",
    "setup": "npm run setup:all",
    "setup:all": "npm run install:all && npm run setup:config && npm run setup:env",
    "setup:config": "node scripts/setup-config.js",
    "setup:env": "node scripts/setup-env.js",
    "docs": "npm run docs:all",
    "docs:all": "npm run docs:web && npm run docs:backend && npm run docs:blockchain",
    "docs:web": "cd web && npm run docs",
    "docs:backend": "cd backend && npm run docs",
    "docs:blockchain": "cd bloc && npm run docs",
    "storybook": "cd components && npm run storybook",
    "build-storybook": "cd components && npm run build-storybook",
    "analyze": "npm run analyze:all",
    "analyze:all": "npm run analyze:web && npm run analyze:backend",
    "analyze:web": "cd web && npm run analyze",
    "analyze:backend": "cd backend && npm run analyze",
    "security": "npm run security:all",
    "security:all": "npm run security:audit && npm run security:scan",
    "security:audit": "npm audit --audit-level=moderate",
    "security:scan": "snyk test",
    "docker": "npm run docker:all",
    "docker:all": "npm run docker:build && npm run docker:run",
    "docker:build": "docker-compose build",
    "docker:run": "docker-compose up -d",
    "docker:stop": "docker-compose down",
    "kubernetes": "npm run k8s:all",
    "k8s:all": "npm run k8s:deploy && npm run k8s:monitor",
    "k8s:deploy": "kubectl apply -f k8s/",
    "k8s:monitor": "kubectl get pods -w",
    "monitor": "npm run monitor:all",
    "monitor:all": "npm run monitor:logs && npm run monitor:metrics",
    "monitor:logs": "pm2 logs",
    "monitor:metrics": "pm2 monit",
    "backup": "npm run backup:all",
    "backup:all": "npm run backup:data && npm run backup:config",
    "backup:data": "node scripts/backup-data.js",
    "backup:config": "node scripts/backup-config.js",
    "restore": "npm run restore:all",
    "restore:all": "npm run restore:data && npm run restore:config",
    "restore:data": "node scripts/restore-data.js",
    "restore:config": "node scripts/restore-config.js"
  },
  "workspaces": [
    "web",
    "backend",
    "bloc",
    "assets",
    "components",
    "entities",
    "fonts",
    "helpers",
    "image",
    "languages",
    "cli",
    "gateway",
    "knowledge"
  ],
  "dependencies": {
    "concurrently": "^8.2.2",
    "cross-env": "^7.0.3",
    "rimraf": "^5.0.5",
    "fs-extra": "^11.1.1",
    "glob": "^10.3.10",
    "chalk": "^5.3.0",
    "ora": "^7.0.1",
    "commander": "^11.1.0",
    "inquirer": "^9.2.12",
    "yargs": "^17.7.2",
    "dotenv": "^16.3.1",
    "winston": "^3.11.0",
    "axios": "^1.6.2",
    "form-data": "^4.0.0",
    "node-cron": "^3.0.3",
    "pm2": "^5.3.0",
    "nodemon": "^3.0.2",
    "ts-node": "^10.9.1",
    "typescript": "^5.3.2",
    "jest": "^29.7.0",
    "@types/jest": "^29.5.8",
    "ts-jest": "^29.1.1",
    "eslint": "^8.54.0",
    "@typescript-eslint/eslint-plugin": "^6.12.0",
    "@typescript-eslint/parser": "^6.12.0",
    "prettier": "^3.1.0",
    "husky": "^8.0.3",
    "lint-staged": "^15.2.0",
    "commitizen": "^4.3.0",
    "cz-conventional-changelog": "^3.3.0",
    "semantic-release": "^22.0.7",
    "@semantic-release/git": "^10.0.1",
    "@semantic-release/npm": "^10.0.4",
    "@semantic-release/github": "^9.2.6",
    "nyc": "^15.1.0",
    "coveralls": "^3.1.1",
    "codecov": "^4.0.1",
    "bundle-analyzer": "^0.5.0",
    "webpack-bundle-analyzer": "^4.9.1",
    "source-map-explorer": "^2.5.3",
    "size-limit": "^10.0.0",
    "@size-limit/preset-small-lib": "^10.0.0",
    "bundlesize": "^0.18.0",
    "webpack-bundle-size-analyzer": "^3.1.0",
    "compression-webpack-plugin": "^10.0.0",
    "terser-webpack-plugin": "^5.3.9",
    "css-minimizer-webpack-plugin": "^5.0.1",
    "mini-css-extract-plugin": "^2.7.6",
    "html-webpack-plugin": "^5.5.3",
    "copy-webpack-plugin": "^11.0.0",
    "clean-webpack-plugin": "^4.0.0",
    "webpack-merge": "^5.9.0",
    "webpack-dev-server": "^4.15.1",
    "hot-module-replacement-plugin": "^0.3.0",
    "fork-ts-checker-webpack-plugin": "^9.0.2",
    "ts-loader": "^9.5.1",
    "babel-loader": "^9.1.3",
    "@babel/core": "^7.23.5",
    "@babel/preset-env": "^7.23.5",
    "@babel/preset-typescript": "^7.23.3",
    "@babel/preset-react": "^7.23.3",
    "css-loader": "^6.8.1",
    "style-loader": "^3.3.3",
    "sass-loader": "^13.3.2",
    "less-loader": "^11.1.3",
    "stylus-loader": "^7.1.2",
    "file-loader": "^6.2.0",
    "url-loader": "^4.1.1",
    "raw-loader": "^4.0.2",
    "svg-url-loader": "^8.0.0",
    "html-loader": "^4.2.0",
    "markdown-loader": "^6.0.0",
    "yaml-loader": "^2.0.0",
    "json-loader": "^0.5.7",
    "xml-loader": "^1.2.1",
    "csv-loader": "^3.0.0",
    "toml-loader": "^2.0.0",
    "ini-loader": "^1.0.0",
    "properties-loader": "^1.0.0",
    "env-loader": "^1.0.0",
    "dotenv-loader": "^0.1.0"
  },
  "devDependencies": {
    "@types/node": "^20.9.0",
    "@types/fs-extra": "^11.0.1",
    "@types/glob": "^8.1.0",
    "@types/inquirer": "^9.0.7",
    "@types/mustache": "^4.2.5",
    "@types/yargs": "^17.0.32",
    "@types/node-cron": "^3.0.11",
    "@types/commander": "^2.12.2",
    "snyk": "^1.1260.0",
    "docker-compose": "^0.0.1",
    "kubectl": "^0.0.1",
    "helm": "^0.0.1"
  },
  "peerDependencies": {

    "@metaverso/web": "^1.0.0",
    "@metaverso/backend": "^1.0.0",
    "@metaverso/bloc": "^1.0.0",
    "@metaverso/assets": "^1.0.0",
    "@metaverso/components": "^1.0.0",
    "@metaverso/entities": "^1.0.0",
    "@metaverso/fonts": "^1.0.0",
    "@metaverso/helpers": "^1.0.0",
    "@metaverso/image": "^1.0.0",
    "@metaverso/languages": "^1.0.0",
    "@metaverso/cli": "^1.0.0",
    "@metaverso/gateway": "^1.0.0",
    "@metaverso/knowledge": "^1.0.0"

    "@metaverso/web": "workspace:*",
    "@metaverso/backend": "workspace:*",
    "@metaverso/bloc": "workspace:*",
    "@metaverso/assets": "workspace:*",
    "@metaverso/components": "workspace:*",
    "@metaverso/entities": "workspace:*",
    "@metaverso/fonts": "workspace:*",
    "@metaverso/helpers": "workspace:*",
    "@metaverso/image": "workspace:*",
    "@metaverso/languages": "workspace:*",
    "@metaverso/cli": "workspace:*",
    "@metaverso/gateway": "workspace:*",
    "@metaverso/knowledge": "workspace:*"

    "@metaverso/web": "^1.0.0",
    "@metaverso/backend": "^1.0.0",
    "@metaverso/bloc": "^1.0.0",
    "@metaverso/assets": "^1.0.0",
    "@metaverso/components": "^1.0.0",
    "@metaverso/entities": "^1.0.0",
    "@metaverso/fonts": "^1.0.0",
    "@metaverso/helpers": "^1.0.0",
    "@metaverso/image": "^1.0.0",
    "@metaverso/languages": "^1.0.0",
    "@metaverso/cli": "^1.0.0",
    "@metaverso/gateway": "^1.0.0",
    "@metaverso/knowledge": "^1.0.0"

  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "browserslist": {
    "production": [
      ">0.5%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "keywords": [
    "metaverso",
    "crypto",
    "blockchain",
    "3d",
    "virtual-world",
    "defi",
    "nfts",
    "governance",
    "web3",
    "ethereum",
    "polygon",
    "arbitrum",
    "optimism",
    "avalanche",
    "threejs",
    "react",
    "typescript",
    "solidity",
    "smart-contracts",
    "decentralized",
    "virtual-reality",
    "augmented-reality",
    "gaming",
    "social",
    "economy"
  ],
  "author": "Metaverso Crypto World Virtual 3D Team",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/metaverso/metaverso-crypto-world-virtual-3d.git",
    "directory": "."
  },
  "bugs": {
    "url": "https://github.com/metaverso/metaverso-crypto-world-virtual-3d/issues"
  },
  "homepage": "https://metaverso.com",
  "funding": {
    "type": "opencollective",
    "url": "https://opencollective.com/metaverso"
  },
  "config": {
    "commitizen": {
      "path": "cz-conventional-changelog"
    }
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
    }
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  },
  "release": {
    "branches": [
      "main",
      "develop"
    ],
    "plugins": [
      "@semantic-release/commit-analyzer",
      "@semantic-release/release-notes-generator",
      "@semantic-release/changelog",
      "@semantic-release/npm",
      "@semantic-release/github",
      "@semantic-release/git"
    ]
  },
  "nyc": {
    "extends": "@istanbuljs/nyc-config-typescript",
    "exclude": [
      "coverage/**",
      "packages/*/test",
      "test/**",
      "test{,-*}.{js,cjs,mjs,ts,tsx,jsx}",
      "**/*{.,-}test.{js,cjs,mjs,ts,tsx,jsx}",
      "**/*{.,-}spec.{js,cjs,mjs,ts,tsx,jsx}",
      "**/__tests__/**",
      "**/{karma,rollup,webpack,vite,vitest,jest,ava,babel,nyc,cypress,tsup,build}.config.*",
      "**/.{eslint,mocha,babel,nyc}.js",
      "**/{main,renderer,preload}.js"
    ]
  },
  "size-limit": [
    {
      "path": "web/dist/**/*.js",
      "limit": "2 MB"
    },
    {
      "path": "backend/dist/**/*.js",
      "limit": "5 MB"
    }
  ],
  "bundlesize": [
    {
      "path": "web/dist/**/*.js",
      "maxSize": "2 MB"
    },
    {
      "path": "backend/dist/**/*.js",
      "maxSize": "5 MB"
    }
  ]

} 

}

}

} 
