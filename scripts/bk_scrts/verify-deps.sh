#!/bin/bash

echo "üîç Verificando configuraci√≥n de dependencias de WoldVirtual3DlucIA..."
echo "================================================================"

# Verificar que no hay node_modules en el repositorio
if git ls-files | grep -q "node_modules/"; then
    echo "‚ùå ERROR: node_modules/ encontrado en el repositorio"
    echo "   Esto causar√° conflictos de merge. Remover con:"
    echo "   git rm -r --cached node_modules/"
    exit 1
else
    echo "‚úÖ No hay node_modules/ en el repositorio"
fi

# Verificar que existe package.json principal
if [ ! -f "package.json" ]; then
    echo "‚ùå ERROR: package.json principal no encontrado"
    exit 1
else
    echo "‚úÖ package.json principal encontrado"
fi

# Verificar que no hay m√∫ltiples archivos de lock
lock_files=$(ls -la | grep -E "\.(lock|yaml)$" | grep -E "(package-lock|yarn|pnpm)" | wc -l)
if [ $lock_files -gt 1 ]; then
    echo "‚ùå ERROR: M√∫ltiples archivos de lock detectados:"
    ls -la | grep -E "\.(lock|yaml)$" | grep -E "(package-lock|yarn|pnpm)"
    echo "   Mantener solo uno para evitar conflictos"
    exit 1
else
    echo "‚úÖ Configuraci√≥n de archivos de lock correcta"
fi

# Verificar versiones de Node.js y npm
echo ""
echo "üìä Versiones del sistema:"
echo "   Node.js: $(node --version)"
echo "   npm: $(npm --version)"

# Verificar que la versi√≥n de Node.js es compatible
node_version=$(node --version | cut -d'v' -f2 | cut -d'.' -f1)
if [ $node_version -lt 18 ]; then
    echo "‚ö†Ô∏è  ADVERTENCIA: Node.js versi√≥n $node_version detectada"
    echo "   Se recomienda Node.js 18.x o superior"
else
    echo "‚úÖ Versi√≥n de Node.js compatible"
fi

# Verificar dependencias principales
echo ""
echo "üì¶ Verificando dependencias principales..."
if [ -f "package.json" ]; then
    echo "   Dependencias en package.json: $(grep -c '"dependencies"' package.json || echo "0")"
    echo "   Dependencias de desarrollo: $(grep -c '"devDependencies"' package.json || echo "0")"
fi

# Verificar m√≥dulos espec√≠ficos
echo ""
echo "üîß Verificando m√≥dulos espec√≠ficos:"

# M√≥dulo web
if [ -f "web/package.json" ]; then
    echo "   ‚úÖ web/package.json encontrado"
else
    echo "   ‚ö†Ô∏è  web/package.json no encontrado"
fi

# Editor 3D
if [ -f ".bin/editor3d/package.json" ]; then
    echo "   ‚úÖ .bin/editor3d/package.json encontrado"
else
    echo "   ‚ö†Ô∏è  .bin/editor3d/package.json no encontrado"
fi

# Cliente
if [ -f "client/package.json" ]; then
    echo "   ‚úÖ client/package.json encontrado"
else
    echo "   ‚ö†Ô∏è  client/package.json no encontrado"
fi

echo ""
echo "‚úÖ Verificaci√≥n de dependencias completada"
echo "================================================================"
echo "üí° Para instalar todas las dependencias, ejecutar:"
echo "   npm install"
echo "   cd web && npm install"
echo "   cd ../.bin/editor3d && npm install"
echo "   cd ../../client && npm install" 